SAJÁT CONTEXT MANAGER OBJEKTUMMAL MEGVALÓSÍTVA I.
=================================================

A példa csak bemutatást szolgál; megvalósítjuk a fájl objektumokban már rendelkezésre
álló context manager interfészt.

Az __exit__() metódusnak kötelező a bemutatott paramétereket adni; erre a kivételkezeléshez
van szükség (ld. később).

Az __enter__() metódusnak azért kell magát az objektumot visszaadnia, mert a

    with [konstruktor] as x

alaknál erre szükség van. Az x változó a keletkezett objektumra kell mutatnia.

class MyReader:
    def __init__(self, path):
        self.path = path
        self.f_obj = None
        print('__init__')

    def __enter__(self):
        self.f_obj = open(self.path)
        print('__enter__')

        return self

    def __exit__(self, excType, excValue, excTraceback):
        self.f_obj.close()
        self.f_obj = None
        print('__exit__', excType, excValue, excTraceback)

    def readLine(self):
        return self.f_obj.readline()

r = MyReader('yyy.txt')
print('with előtt')
with r:                       # itt FELESLEGES __enter__()-ben a return self
    line = r.readLine()
    print('with vége')

print('with után')

# __init__
# with előtt
# __enter__
# with vége
# __exit__ None None None
# with után

Nem keletkezett kivétel, ezért __exit__ minden paramétere None.

Így is használhatjuk:

with MyReader('yyy.txt') as r: # itt SZÜKSÉGES __enter__()-ben a return self
    line = r.readLine()
    print('with vége')

print('with után')

# __init__
# __enter__
# with vége
# __exit__ None None None
# with után


================================================================
